Program.Sub.ScreenSU.Start
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Variable.UDT.uBatches.Define("Batch",String,Batch_Num)
Variable.UDT.uDetail.Define("VENDOR",String)
Variable.UDT.uDetail.Define("INVOICE",String)
Variable.UDT.uDetail.Define("PO",String)
Variable.UDT.uDetail.Define("CHECK_DATE",String)
Variable.UDT.uDetail.Define("INVOICE_DATE",String)
Variable.UDT.uDetail.Define("AMOUNT",Float)
Variable.UDT.uDetail.Define("JOB",String)
Variable.UDT.uDetail.Define("FREIGHT",String)
Variable.UDT.uDetail.Define("OTHER_AMOUNT",Float)
Variable.UDT.uDetail.Define("FISCAL_PERIOD",String)
Variable.UDT.uDetail.Define("BATCH_NUMBER",String)
Variable.UDT.uDetail.Define("DATE_BATCH",String)
    Variable.Global.sBatches.Declare(String)
Variable.uGlobal.uBatches.Declare("uBatches")
Variable.uGlobal.uDetail.Declare("uDetail")
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.ODBC.Connection!cONX.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass,7200)
V.Local.sFinalMessage.Declare(String)
F.Intrinsic.UI.InvokeWaitDialog("Checking Existance of Directory","Please Wait")
F.Intrinsic.Control.CallSub(Checkdir)
Function.Intrinsic.UI.changewaitstatus("Getting list of batches to exclude")
Function.Intrinsic.Control.callsub(Getprocessedbatches)
Function.Intrinsic.UI.ChangeWaitStatus("Getting/Processing Data")
Function.Intrinsic.Control.callsub(Getdata)
Function.Intrinsic.UI.ChangeWaitStatus("Exporting Data to CSV File")
Function.Intrinsic.Control.CallSub(Exportdata)
F.Intrinsic.UI.ChangeWaitStatus("Adding Processed Batches to Exclusions List")
F.Intrinsic.Control.CallSub(Stopbatches)
F.Intrinsic.String.Concat("Successfully created CSV File:",V.Ambient.NewLine,V.Args.FilePath,V.Local.sFinalMessage)
F.Intrinsic.UI.ChangeWaitStatus(V.Local.sFinalMessage)
F.Intrinsic.UI.Sleep(5)
F.Intrinsic.UI.CloseWaitDialog
F.Intrinsic.Control.CallSub(Unload)


Program.Sub.Main.End

Program.Sub.CheckDir.Start
V.Local.sFilePath.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sMsg.Declare(String)
F.Intrinsic.String.Concat(V.Caller.FilesDir,"\Accounting Exports\AP\",V.Local.sFilePath)
F.Intrinsic.File.DirExists(V.Local.sFilePath,V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists,=,False)
    Function.Intrinsic.String.Concat(Variable.Local.sFilepath,"Does not exist. Create directory before continuing",Variable.Local.sMsg)
    Function.Intrinsic.UI.Msgbox(Variable.Local.sMsg)
    Function.Intrinsic.Control.callsub(Unload)
Function.Intrinsic.Control.EndIf

Program.Sub.CheckDir.End

Program.Sub.GetProcessedBatches.Start
Variable.Global.sBatches.set("('")
Function.ODBC.Connection!cONX.OpenLocalRecordsetRO("RST","SELECT BATCH FROM GCG_CT_PROC_BATCHES WHERE TYPE ='AP'")
Function.Intrinsic.Control.DoUntil(Variable.ODBC.CONX!RST.EOF,=,True)
    Function.Intrinsic.Control.IF(Variable.Global.SBATCHES,=,"('")
        Function.Intrinsic.String.Concat(Variable.Global.SBATCHES,Variable.ODBC.cONX!RST.FIELDVALTRIM!BATCH,"'",V.GLOBAL.SBATCHES)
    Function.Intrinsic.Control.Else
        Function.Intrinsic.String.Concat(Variable.Global.SBATCHES,",'",Variable.ODBC.CONX!RST.FIELDVALTRIM!BATCH,"'",V.GLOBAL.SBATCHES)
    Function.Intrinsic.Control.EndIf
    Function.ODBC.CONX!RST.MoveNext
Function.Intrinsic.Control.Loop
Function.Intrinsic.String.CONCAT(Variable.Global.SBATCHES,")",Variable.GLOBAL.SBATCHES)
Function.ODBC.CONX!RST.Close

Program.Sub.GetProcessedBatches.End

Program.Sub.GetData.Start
Variable.Local.i.Declare(Long)
Variable.Local.sSQL.Declare(String)
Variable.Local.sPeriod.Declare(String)
V.Local.sPeriodSplit.Declare(String)

V.Local.i.Set(-1)

Function.Intrinsic.Control.IF(Variable.Global.SBATCHES,=,"(')")
    Variable.Local.sSQL.SET("SELECT VENDOR, INVOICE, PURCHASE_ORDER, DATE_INVOICE_DUE, DATE_INVOICE, AMT_INVOICE, JOB, FREIGHT, OTHER, DATE_BATCH, BATCH_NUM FROM V_Ap_OPEN_ITEMS WHERE BATCH_NUM <> ''")
Function.Intrinsic.Control.Else
    Function.Intrinsic.String.Concat("SELECT VENDOR, INVOICE, PURCHASE_ORDER, DATE_INVOICE_DUE, DATE_INVOICE, AMT_INVOICE, JOB, FREIGHT, OTHER, DATE_BATCH, BATCH_NUM FROM V_AP_OPEN_ITEMS WHERE BATCH_NUM <> '' AND BATCH_NUM NOT IN ",V.GLOBAL.SBATCHES,V.LOCAL.SSQL)
Function.Intrinsic.Control.EndIf
Function.ODBC.Connection!cONX.OpenLocalRecordsetRO("rst",Variable.Local.sSQL)
Function.Intrinsic.Control.if(Variable.ODBC.cONX!RST.eof,=,True)
    Function.Intrinsic.UI.Msgbox("No Records Were Found to Export")
	F.ODBC.cONX!RST.Close
    Function.Intrinsic.Control.callsub(Unload)
Function.Intrinsic.Control.Else
	Function.Intrinsic.Control.dountil(Variable.ODBC.cONX!RST.eof,=,True)
	        Function.Intrinsic.Control.if(Variable.Local.i,=,-1)
	            Variable.Local.i.set(0)
	            Variable.uGlobal.uBatches.Redim(0,0)
	            Variable.uGlobal.uDetail.Redim(0,0)
	        Function.Intrinsic.Control.Else
	            Function.Intrinsic.Math.ADD(Variable.Local.I,1,Variable.Local.i)
	            Variable.uGlobal.uBatches.RedimPreserve(0,Variable.Local.i)
	            Variable.uGlobal.uDetail.RedimPreserve(0,Variable.Local.i)
	        Function.Intrinsic.Control.EndIf
	        Variable.uGlobal.uBatches(Variable.Local.i)!Batch.set(Variable.ODBC.cONX!RST.fieldvaltrim!BATCH_NUM)
	        Variable.uGlobal.uDetail(Variable.Local.i)!Vendor.set(Variable.ODBC.cONX!RST.fieldvaltrim!Vendor)
	        Variable.uGlobal.uDetail(Variable.Local.i)!Invoice.set(Variable.ODBC.cONX!RST.fieldvaltrim!INVOICE)
	        Variable.uGlobal.uDetail(Variable.Local.i)!PO.set(Variable.ODBC.cONX!RST.fieldvaltrim!PURCHASE_ORDER)
		V.uGlobal.uDetail(v.Local.i)!CHECK_DATE.Set(V.ODBC.cONX!RST.FieldValTrim!DATE_INVOICE_DUE)
		V.uGlobal.uDetail(V.Local.i)!INVOICE_DATE.Set(V.ODBC.cONX!RST.fiEldvaltrim!DATE_INVOICE)
		V.uGlobal.uDetail(v.Local.i)!AMOUNT.Set(V.ODBC.cONX!RST.FieldValFloat!AMT_INVOICE)
		V.uGlobal.uDetail(V.Local.i)!JOB.Set(V.ODBC.cONX!RST.FieldValTrim!JOB)
		V.uGlobal.uDetail(v.Local.i)!FREIGHT.Set(V.ODBC.cONX!RST.FieldValFloat!FREIGHT)
		V.uGlobal.uDetail(v.Local.i)!OTHER_AMOUNT.Set(V.ODBC.cONX!RST.FieldValFloat!OTHER)
		F.Intrinsic.String.Split(V.ODBC.cONX!RST.FieldValTrim!DATE_BATCH,"/",V.Local.sPeriodSplit)
		F.Intrinsic.String.LPad(V.Local.sPeriodSplit(0),"0",2,V.Local.sPeriodSplit(0))
		F.Intrinsic.String.Concat(V.Local.sPeriodSplit(0),V.Local.sPeriodSplit(2),V.Local.sPeriod)
		V.uGlobal.uDetail(V.Local.i)!FISCAL_PERIOD.Set(V.Local.sPeriod)
		V.uGlobal.uDetail(V.Local.i)!BATCH_NUMBER.Set(V.ODBC.cONX!RST.FieldValTrim!BATCH_NUM)
		V.uGlobal.uDetail(V.Local.i)!DATE_BATCH.Set(V.ODBC.cONX!RST.FieldValTrim!DATE_BATCH)
		F.ODBC.cONX!RST.MoveNext
	F.Intrinsic.Control.Loop
Function.Intrinsic.Control.EndIf

Program.Sub.GetData.End

Program.Sub.Unload.Start
    Function.ODBC.Connection!cONX.Close
    Function.Intrinsic.Control.End
Program.Sub.Unload.End

Program.Sub.ExportData.Start
V.Local.sData.Declare(String)
V.Local.sFilePath.Declare(String)
V.Local.sElements.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sDate.Declare(String)
V.Local.iCount.Declare(Long)
V.Local.iCount.Set(1)

F.Intrinsic.String.Format(V.Ambient.Date,"YYYYMMDD",V.Local.sDate)

F.Intrinsic.Variable.UDTMultiQuickSort(V.uGlobal.uDetail!VENDOR,False,V.uGlobal.uDetail!PO,False,V.uGlobal.uDetail!BATCH_NUMBER,False)
V.Local.sElements.Set("VENDOR*!*INVOICE*!*PO*!*CHECK_DATE*!*INVOICE_DATE*!*AMOUNT*!*JOB*!*FREIGHT*!*OTHER_AMOUNT*!*FISCAL_PERIOD*!*BATCH_NUMBER*!*DATE_BATCH")
F.Intrinsic.Variable.udttostring(V.uGlobal.uDetail,V.Local.sElements,V.Ambient.NewLine,",",V.Local.sData)

F.Intrinsic.String.Concat(V.Caller.FilesDir,"\Accounting Exports\AP\AP-",V.Local.sDate,".csv",V.Local.sFilePath)
F.Intrinsic.File.Exists(V.Local.sFilePath,V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists,=,False)
	F.Intrinsic.File.String2File(V.Local.sFilePath,V.Local.sData)
F.Intrinsic.Control.Else
	F.Intrinsic.Control.DoUntil(V.Local.bExists,=,False)
		F.Intrinsic.String.Concat(V.Caller.FilesDir,"\Accounting Exports\AP\AP-",V.Local.sDate,"-",V.Local.iCount,".csv",V.Local.sFilePath)
		F.Intrinsic.File.Exists(V.Local.sFilePath,V.Local.bExists)
		F.Intrinsic.Math.Add(V.Local.iCount,1,V.Local.iCount)
	F.Intrinsic.Control.Loop
	F.Intrinsic.File.String2File(V.Local.sFilePath,V.Local.sData)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.AddRV("FilePath",V.Local.sFilePath)
F.Intrinsic.Control.ExitSub

Program.Sub.ExportData.End

Program.Sub.StopBatches.Start
F.Intrinsic.Variable.UDTMultiFlagDuplicates(V.uGlobal.uBatches!Batch)
F.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uBatches)

V.Local.I.Declare(Long)
V.Local.iID.Declare(Long)
F.ODBC.Connection!CONX.OpenLocalRecordsetRO("rstTOP","SELECT TOP 1 KEY_ID FROM GCG_CT_PROC_BATCHES ORDER BY KEY_ID DESC")
F.Intrinsic.Control.If(V.ODBC.CONX!rstTOP.EOF,=,True)
	V.Local.iID.Set(0)
F.Intrinsic.Control.Else
	V.Local.iID.Set(V.ODBC.CONX!rstTOP.FieldValTrim!KEY_ID)
F.Intrinsic.Control.EndIf
F.ODBC.CONX!rstTOP.Close

F.ODBC.Connection!CONX.OpenLocalRecordsetRW("rstStop","SELECT * FROM GCG_CT_PROC_BATCHES")
F.Intrinsic.Control.For(V.Local.I,0,V.uGlobal.uBatches.UBound,1)
	F.Intrinsic.Math.Add(V.Local.iID,1,V.Local.iID)
	F.ODBC.CONX!rstStop.AddNew
	F.ODBC.CONX!rstSTOP.Set!KEY_ID(V.Local.iID)
	F.ODBC.CONX!rstSTOP.set!TYPE("AP")
	F.ODBC.CONX!rstSTOP.Set!BATCH(V.uGlobal.uBatches(V.Local.I)!Batch.Trim)
	F.ODBC.CONX!rstStop.Set!PROCESS_DATE(V.Ambient.Date)
	F.ODBC.CONX!rstStop.Set!PROCESS_USER(V.Caller.User)
F.Intrinsic.Control.Next(V.Local.I)
F.ODBC.CONX!rstSTOP.Update
F.ODBC.CONX!rstStop.Close

Program.Sub.StopBatches.End

Program.Sub.Comments.Start
${$0$}$GCG_CT_AP_BATCH_.ga$}$BLEFLER$}$4/21/2014
Program.Sub.Comments.End

